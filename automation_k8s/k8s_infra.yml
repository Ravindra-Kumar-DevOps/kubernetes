- hosts: all
  become: true
  become_user: root
  tasks:
  - name: Update and upgrade apt packages
    become: true
    apt: upgrade=yes update_cache=yes
  - name: Install haproxy
    apt: name=haproxy state=present
    when: inventory_hostname in groups["k8s_lb"]	
  - name: copy configuration file to ha-proxy
    copy: src=haproxy.cfg dest=/etc/haproxy/haproxy.cfg force=yes
    notify:
      - haproxy status
    when: inventory_hostname in groups["k8s_lb"]
  - name: Install the k8s prereqisite
    apt: name=apt-transport-https state=present
    when: inventory_hostname not in groups["k8s_lb"]
  - name: add the apt keys for kubernetes
    apt_key:
     url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
     state: present
    when: inventory_hostname not in groups["k8s_lb"]
  - name: add a apt repository 
    apt_repository: 
     repo: deb https://apt.kubernetes.io/ kubernetes-xenial main 
     state: present 
     filename: k8s
     update_cache: yes
    when: inventory_hostname not in groups["k8s_lb"]
  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl   
    when: inventory_hostname not in groups["k8s_lb"]
  - name: install docker
    apt: name=docker.io state=present 
    notify:
      - docker status
    when: inventory_hostname not in groups["k8s_lb"]
  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --control-plane-endpoint "localhost:6443" --ignore-preflight-errors=NumCPU --upload-certs
    when: inventory_hostname in groups["k8s_master"] and master == "start" and new == "true"
  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
      - mkdir -p /root/.kube
      - cp -i /etc/kubernetes/admin.conf /root/.kube/config
      - chown root:root /root/.kube/config
    when: inventory_hostname in groups["k8s_master"] and master=="start" and new == "true"
  - name: Generate worker join command
    command: kubeadm token create --print-join-command
    register: join_command_worker
    when: inventory_hostname in groups["k8s_master"] and master=="start"

  - name: Copy worker_join command to local file
    local_action: copy content="{{ join_command_worker.stdout_lines[0] }}" dest="./worker-join-command"
    when: inventory_hostname in groups["k8s_master"] and master=="start"
  - name: Generate master_join command
    command: kubeadm init phase upload-certs --upload-certs
    register: join_command_master
    when: inventory_hostname in groups["k8s_master"] and master=="start"
  - name: Copy worker_join command to local file
    local_action: copy content="{{ join_command_master.stdout_lines[2] }}" dest="./master-join-command"
    when: inventory_hostname in groups["k8s_master"] and master=="start"
  - name: Generate a master file 
    shell: sh /root/kubernetes/automation_k8s/create_join_master.sh 
    when: inventory_hostname == "localhost"
  - name: Copy the worker join command to worker  location
    copy: src=worker-join-command dest=/tmp/join-command.sh mode=0777
    when: inventory_hostname in groups["k8s_worker"] and new=="true"
  handlers:
    - name: docker status
      service: name=docker state=started
    - name: haproxy status
      service: name=haproxy state=started

